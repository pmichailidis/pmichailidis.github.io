<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en" prefix="dc: http://purl.org/dc/elements/1.1/">
<head><meta name="author" content="Created with Hot Potatoes by Half-Baked Software, registered to panos."/><meta name="keywords" content="Hot Potatoes, Hot Potatoes, Half-Baked Software, Windows, University of Victoria"/>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8"/>

<meta name="dc:creator" content="panos" />
<meta name="dc:creator" content="REPITS ZEFI" />
<meta name="dc:title" content="&#x041F;&#x0420;&#x041E;&#x0424;&#x0415;&#x0421;&#x0421;&#x0418;&#x0418;" />



<title>
&#x041F;&#x0420;&#x041E;&#x0424;&#x0415;&#x0421;&#x0421;&#x0418;&#x0418;
</title>

<!-- Made with executable version 7.0 Release 3 Build 0 -->

<!-- The following insertion allows you to add your own code directly to this head tag from the configuration screen -->



<style>


/* This is the CSS stylesheet used in the exercise. */
/* Elements in square brackets are replaced by data based on configuration settings when the exercise is built. */

/* BeginCorePageCSS */

/* Made with executable version 7.0 Release 3 Build 0 */



/* CSS variables for colours. */
:root{
	--strFontFace:       Geneva,Arial;
	--strFontSize:       medium;
	--strTextColor:      #000000;
	--strTitleColor:     #808000;

	--strFuncLightColor: #dfdfdf;
	--strFuncShadeColor: #606060;
	--strLinkColor:      #0000cc;
	--strVLinkColor:     #0000ff;
	
	--strNavBarColor:    #808080;
	--strNavLightColor:  #bfbfbf;
	--strNavShadeColor:  #404040;
	--strNavTextColor:   #000000;
	
	--strPageBGColor:    #ffff80;
	--strExBGColor:      #c0c0c0;
}

body{
	font-family: var(--strFontFace);
	background-color: var(--strPageBGColor);
	color: var(--strTextColor);
 
	margin-right: 5%;
	margin-left: 5%;
	font-size: var(--strFontSize);
	padding-bottom: 0.5em;
}

p{
	text-align: left;
	margin: 0px;
	font-size: 1em;
}

table,div,span,td{
	font-size: 1em;
	color: var(--strTextColor);
}

div.Titles{
	padding: 0.5em;;
	text-align: center;
	color: var(--strTitleColor);
}

button{
	font-family: var(--strFontFace);
	font-size: 1em;
	display: inline;
}

.ExerciseTitle{
	font-size: 140%;
	color: var(--strTitleColor);
}

.ExerciseSubtitle{
	font-size: 120%;
	color: var(--strTitleColor);
}

div.StdDiv, div.ExerciseContainer, div.ReadingContainer{
	background-color: var(--strExBGColor);
	text-align: center;
	font-size: 1em;
	color: var(--strTextColor);
	padding: 0.5em;
	border-style: solid;
	border-width: 1px 1px 1px 1px;
	border-color: var(--strTextColor);
	margin-bottom: 1px;
}

div.ReadingContainer, div.ExerciseContainer{
	min-width: 15em;
	flex-grow: 1;
	flex-basis: 0;
	margin: 1px;
}

div#ContainerDiv{
	margin: -1px;
	padding: 0;
	border: none;
	display: flex;
	flex-direction: row;
	flex-wrap: wrap;
	justify-content: space-between;
}

/* EndCorePageCSS */

.RTLText{
	text-align: right;
	font-size: 150%;
	direction: rtl;
	font-family: "Simplified Arabic", "Traditional Arabic", "Times New Roman", var(--strFontFace); 
}

.CentredRTLText{
	text-align: center;
	font-size: 150%;
	direction: rtl;
	font-family: "Simplified Arabic", "Traditional Arabic", "Times New Roman", var(--strFontFace); 
}

button p.RTLText{
	text-align: center;
}

.RTLGapBox{
	text-align: right;
	font-size: 150%;
	direction: rtl;
	font-family: "Times New Roman", var(--strFontFace);
}

.Guess{
	font-weight: bold;
}

.CorrectAnswer{
	font-weight: bold;
}

div#Timer{
	padding: 0.25em;
	margin-left: auto;
	margin-right: auto;
	text-align: center;
	color: var(--strTitleColor);
}

span#TimerText{
	padding: 0.25em;
	border-width: 1px;
	border-style: solid;
	font-weight: bold;
	display: none;
	color: var(--strTitleColor);
}

span.Instructions{

}

div.ExerciseText{

}

.FeedbackText, .FeedbackText span.CorrectAnswer, .FeedbackText span.Guess, .FeedbackText span.Answer{
	color: var(--strTitleColor);
}

.LeftItem{
	font-size: 1em;
	color: var(--strTextColor);
	text-align: left;
}

.RightItem{
	font-weight: bold;
	font-size: 1em;
	color: var(--strTextColor);
	text-align: left;
}

span.CorrectMark{

}

input, textarea{
	font-family: var(--strFontFace);
	font-size: 120%;
}

select{
	font-size: 1em;
}

div.Feedback {
	background-color: var(--strPageBGColor);
	left: 33%;
	width: 34%;
	top: 33%;
	z-index: 1;
	border-style: solid;
	border-width: 1px;
	padding: 5px;
	text-align: center;
	color: var(--strTitleColor);
	position: absolute;
	display: none;
	font-size: 1em;
}




div.ExerciseDiv{
	color: var(--strTextColor);
}

/* JMatch standard output table. */
table.MatchTable{
	margin: 2em auto; 
	border-width: 0;
}

/* JMatch flashcard styles */
table.FlashcardTable{
	background-color: transparent;
	color: var(--strTextColor);
	border-color: var(--strTextColor);
	margin-left: auto;
	margin-right: auto;
	margin-top: 2em;
	margin-bottom: 2em;
	/*width: 90%;*/
	position: relative;
	text-align: center;
	padding: 0px;
}

table.FlashcardTable tr{
	border-style: none;
	margin: 0px;
	padding: 0px;
	background-color: var(--strExBGColor);
}

table.FlashcardTable td.Showing{
	font-size: 140%;
	text-align: center;
	width: 50%;
	display: table-cell;
	padding: 2em;
	margin: 0px;
	border-style: solid;
	border-width: 1px;
	border-radius: 0.5em;
	color: var(--strTextColor);
	box-shadow: 0.2em 0.3em 0.2em var(--strNavShadeColor);
	background-color: var(--strPageBGColor);
}

table.FlashcardTable td.Hidden{
	display: none;
}

/* JMix styles */
div.JMixDrag, div.JMatchDrag{
	padding: 0;
	background-color: var(--strPageBGColor);
	border-style: none;
}

div#GuessDiv{
	padding: 0.5em;
	margin-bottom: 2em;
}

div#SegmentDiv{
	margin-top: 2em;
	margin-bottom: 2em;
	text-align: center;
}

a.ExSegment{
	font-size: 120%;
	font-weight: bold;
	text-decoration: none;
	color: var(--strTextColor);
	display: inline-block;
	padding: 0.5em;
	border: solid 1pt gray;
	margin-bottom: 0.5em;
}

span.RemainingWordList{
	font-style: italic;
}

div.DropLine {
	position: absolute;
	text-align: left;
	border-bottom-style: solid;
	border-bottom-width: 1px;
	border-bottom-color: var(--strTitleColor);
	width: 80%;
	left: 10%;
}

/* JCloze styles */

.ClozeWordList{
	text-align: center;
	font-weight: bold;
}

div.ClozeBody{
	text-align: left;
	margin-top: 2em;
	margin-bottom: 2em;
	line-height: 2.0
}

span.GapSpan{
	font-weight: bold;
}

/* JCross styles */

table.CrosswordGrid{
	margin: auto auto 1em auto;
	border-collapse: collapse;
	padding: 0px;
	background-color: #000000;
}

table.CrosswordGrid tbody tr td{
	width: 1.5em;
	height: 1.5em;
	text-align: center;
	vertical-align: middle;
	font-size: 140%;
	padding: 1px;
	margin: 0px;
	border-style: solid;
	border-width: 1px;
	border-color: #000000;
	color: #000000;
}

table.CrosswordGrid span{
	color: #000000;
}

table.CrosswordGrid td.BlankCell{
	background-color: #000000;
	color: #000000;
}

table.CrosswordGrid td.LetterOnlyCell{
	text-align: center;
	vertical-align: middle;
	background-color: #ffffff;
	color: #000000;
	font-weight: bold;
}

table.CrosswordGrid td.NumLetterCell{
	text-align: left;
	vertical-align: top;
	background-color: #ffffff;
	color: #000000;
	padding: 1px;
	font-weight: bold;
}

.NumLetterCellText{
	cursor: pointer;
	color: #000000;
}

.GridNum{
	vertical-align: super;
	font-size: 66%;
	font-weight: bold;
	text-decoration: none;
	color: #000000;
}

.GridNum:hover, .GridNum:visited{
	color: #000000;
}

table#Clues{
	margin: auto;
	vertical-align: top;
}

table#Clues td{
	vertical-align: top;
}

table.ClueList{
  margin: auto;
}

td.ClueNum{
	text-align: right;
	font-weight: bold;
	vertical-align: top;
}

td.Clue{
	text-align: left;
}

div#ClueEntry{
	text-align: left;
	margin-bottom: 1em;
}

/* Keypad styles */

div.Keypad{
	text-align: center;
	display: none; /* initially hidden, shown if needed */
	margin-bottom: 0.5em;
}

div.Keypad button{
	font-family: var(--strFontFace);
	font-size: 120%;
	background-color: #ffffff;
	color: #000000;
	width: 2em;
	border-style: solid;
	border-width: 1px;
	border-radius: 0.5em;
	color: var(--strTextColor);
	box-shadow: 0.2em 0.3em 0.2em var(--strTextColor);
}

/* JQuiz styles */

div.QuestionNavigation{
	text-align: center;
}

.QNum{
	margin: 0em 1em 0.5em 1em;
	font-weight: bold;
	vertical-align: middle;
}

textarea{
	font-family: var(--strFontFace);
}

.QuestionText{
	text-align: left;
	margin: 0px;
	font-size: 1em;
}

.Answer{
	font-size: 120%;
}

.PartialAnswer{
	font-size: 120%;
	letter-spacing: 0.1em;
	color: var(--strTitleColor);
}

.Highlight{
	color: #000000;
	background-color: #ffff00;
	font-weight: bold;
	font-size: 120%;
}

ol.QuizQuestions{
	text-align: left;
	list-style-type: none;
}

li.QuizQuestion{
	padding: 1em;
	border-style: solid;
	border-width: 0px 0px 1px 0px;
}

ol.MCAnswers{
	text-align: left;
	list-style-type: upper-alpha;
	padding: 1em;
}

ol.MCAnswers li{
	margin-bottom: 1em;
}

ol.MSelAnswers{
	text-align: left;
	list-style-type: lower-alpha;
	padding: 1em;
}

div.ShortAnswer{
	padding: 1em;
}

.FuncButton {
	border-style: solid;
	border-radius: 0.5em;
	padding: 0.5em;
	min-width: 3em;

	border-left-color: var(--strFuncLightColor);
	border-top-color: var(--strFuncLightColor);
	border-right-color: var(--strFuncShadeColor);
	border-bottom-color: var(--strFuncShadeColor);
	color: var(--strTextColor);
	background-color: var(--strExBGColor);

	border-width: 1pt;
	cursor: pointer;	
	box-shadow: 0.2em 0.3em 0.2em var(--strFuncShadeColor);
}

.FuncButton:active {
	box-shadow: none;
}

.FuncButton:hover{
	color: var(--strExBGColor);
	background-color: var(--strTextColor);
}

/*BeginNavBarStyle*/

div.NavButtonBar{
	background-color: var(--strNavBarColor);
	text-align: center;
	margin: 0.25rem 0;
	clear: both;
	font-size: 1em;
	padding: 0.2em;
	box-sizing: border-box;
}

.NavButton {
	border-style: solid;
	border-radius: 0.5em;
	padding: 0.5em;
	min-width: 3em;
	
	border-left-color: var(--strNavLightColor);
	border-top-color: var(--strNavLightColor);
	border-right-color: var(--strNavShadeColor);
	border-bottom-color: var(--strNavShadeColor); 
	background-color: var(--strNavBarColor);
	color: var(--strNavTextColor);

	border-width: 1pt;
	cursor: pointer;	
	box-shadow: 0.2em 0.3em 0.2em var(--strNavShadeColor);
}

.NavButton:active {
	box-shadow: none;
}

.NavButton:hover{
	color: var(--strNavBarColor);
	background-color: var(--strNavTextColor);
}

/*EndNavBarStyle*/

a{
	color: var(--strLinkColor);
}

a:visited{
	color: var(--strVLinkColor);
}

a:hover{
	color: var(--strLinkColor);
}

div.CardStyle {
	position: absolute;
	font-family: var(--strFontFace);
	font-size: 1em;
	border-style: solid;
	border-radius: 0.5em;
	padding: 0.5em;
	min-width: 2em;
	border-width: 1pt;
	color: var(--strTextColor);
	box-shadow: 0.2em 0.3em 0.2em var(--strTextColor);
	background-color: var(--strExBGColor);
	left: -50px;
	top: -50px;
	overflow: visible;
	touch-action: none;
	user-select: none;
	box-sizing: border-box;
}

div.CardStyleCentered{
	text-align: center;
}

.rtl{
	text-align: right;
	font-size: 140%;
}


</style>

<script>

//<![CDATA[

<!--




//CODE FOR HANDLING NAV BUTTONS AND FUNCTION BUTTONS

function FocusAButton(){
	if (document.getElementById('CheckButton1') != null){
		document.getElementById('CheckButton1').focus();
	}
	else{
		if (document.getElementById('CheckButton2') != null){
			document.getElementById('CheckButton2').focus();
		}
		else{
			document.getElementsByTagName('button')[0].focus();
		}
	}
}




//CODE FOR HANDLING DISPLAY OF POPUP FEEDBACK BOX

var topZ = 1000;

function ShowMessage(Feedback){
	var Output = Feedback + '<br /><br />';
	document.getElementById('FeedbackContent').innerHTML = Output;
	var FDiv = document.getElementById('FeedbackDiv');
	topZ++;
	FDiv.style.zIndex = topZ;
	FDiv.style.top = TopSettingWithScrollOffset(30) + 'px';

	FDiv.style.display = 'block';

	ShowElements(false, 'input');
	ShowElements(false, 'select');
	ShowElements(false, 'object');
	ShowElements(true, 'object', 'FeedbackContent');

//Focus the OK button
	setTimeout("document.getElementById('FeedbackOKButton').focus()", 50);
	
//
}

function ShowElements(Show, TagName, ContainerToReverse){
// added third argument to allow objects in the feedback box to appear
//IE bug -- hide all the form elements that will show through the popup
//FF on Mac bug : doesn't redisplay objects whose visibility is set to visible
//unless the object's display property is changed

	//get container object (by Id passed in, or use document otherwise)
	TopNode = document.getElementById(ContainerToReverse);
	var Els;
	if (TopNode != null) {
		Els = TopNode.getElementsByTagName(TagName);
	} else {
		Els = document.getElementsByTagName(TagName);
	}

	for (var i=0; i<Els.length; i++){
		if (TagName == "object") {
			//manipulate object elements in all browsers
			if (Show == true){
				Els[i].style.visibility = 'visible';
			}
			else{
				Els[i].style.visibility = 'hidden';
			}
		} 
	}
}



function HideFeedback(){
	document.getElementById('FeedbackDiv').style.display = 'none';
	ShowElements(true, 'input');
	ShowElements(true, 'select');
	ShowElements(true, 'object');
}


//GENERAL UTILITY FUNCTIONS AND VARIABLES

//PAGE DIMENSION FUNCTIONS
function PageDim(){
//Get the page width and height
	this.W = 600;
	this.H = 400;
	this.W = document.getElementsByTagName('body')[0].offsetWidth;
	this.H = document.getElementsByTagName('body')[0].offsetHeight;
}

var pg = null;

function GetPageXY(El) {
	var XY = {x: 0, y: 0};
	while(El){
		XY.x += El.offsetLeft;
		XY.y += El.offsetTop;
		El = El.offsetParent;
	}
	return XY;
}

function GetScrollTop(){
	if (typeof(window.pageYOffset) == 'number'){
		return window.pageYOffset;
	}
	else{
		if ((document.body)&&(document.body.scrollTop)){
			return document.body.scrollTop;
		}
		else{
			if ((document.documentElement)&&(document.documentElement.scrollTop)){
				return document.documentElement.scrollTop;
			}
			else{
				return 0;
			}
		}
	}
}

function GetViewportHeight(){
	if (typeof window.innerHeight != 'undefined'){
		return window.innerHeight;
	}
	else{
		if (((typeof document.documentElement != 'undefined')&&(typeof document.documentElement.clientHeight !=
     'undefined'))&&(document.documentElement.clientHeight != 0)){
			return document.documentElement.clientHeight;
		}
		else{
			return document.getElementsByTagName('body')[0].clientHeight;
		}
	}
}

function TopSettingWithScrollOffset(TopPercent){
	var T = Math.floor(GetViewportHeight() * (TopPercent/100));
	return GetScrollTop() + T; 
}

//CODE FOR AVOIDING LOSS OF DATA WHEN BACKSPACE KEY INVOKES history.back()
var InTextBox = false;

function SuppressBackspace(e){ 
	if (InTextBox == true){return;}
	thisKey = e.keyCode;

	var Suppress = false;

	if (thisKey == 8) {
		Suppress = true;
		e.preventDefault();
	}
}

window.addEventListener('keypress',SuppressBackspace,false);

function ReduceItems(InArray, ReduceToSize){
	var ItemToDump=0;
	var j=0;
	while (InArray.length > ReduceToSize){
		ItemToDump = Math.floor(InArray.length*Math.random());
		InArray.splice(ItemToDump, 1);
	}
}

function Shuffle(InArray){
	var Num;
	var Temp = new Array();
	var Len = InArray.length;

	var j = Len;

	for (var i=0; i<Len; i++){
		Temp[i] = InArray[i];
	}

	for (i=0; i<Len; i++){
		Num = Math.floor(j  *  Math.random());
		InArray[i] = Temp[Num];

		for (var k=Num; k < (j-1); k++) {
			Temp[k] = Temp[k+1];
		}
		j--;
	}
	return InArray;
}

function WriteToInstructions(Feedback) {
	document.getElementById('InstructionsDiv').innerHTML = Feedback;

}




function EscapeDoubleQuotes(InString){
	return InString.replace(/"/g, '&quot;')
}

function TrimString(InString){
        var x = 0;

        if (InString.length != 0) {
                while ((InString.charAt(InString.length - 1) == '\u0020') || (InString.charAt(InString.length - 1) == '\u000A') || (InString.charAt(InString.length - 1) == '\u000D')){
                        InString = InString.substring(0, InString.length - 1)
                }

                while ((InString.charAt(0) == '\u0020') || (InString.charAt(0) == '\u000A') || (InString.charAt(0) == '\u000D')){
                        InString = InString.substring(1, InString.length)
                }

                while (InString.indexOf('  ') != -1) {
                        x = InString.indexOf('  ')
                        InString = InString.substring(0, x) + InString.substring(x+1, InString.length)
                 }

                return InString;
        }

        else {
                return '';
        }
}

function FindLongest(InArray){
	if (InArray.length < 1){return -1;}

	var Longest = 0;
	for (var i=1; i<InArray.length; i++){
		if (InArray[i].length > InArray[Longest].length){
			Longest = i;
		}
	}
	return Longest;
}

//SELECTION OBJECT FOR TYPING WITH KEYPAD
var selObj = null;
            
SelObj = function(box){
	this.box = box;
	this.selStart = this.box.selectionStart;
	this.selEnd = this.box.selectionEnd;
	this.selText = this.box.value.substring(this.selStart, this.selEnd);
	return this;
}

function setSelText(newText){
	var caretPos = this.selStart + newText.length;
	var newValue = this.box.value.substring(0, this.selStart);
	newValue += newText;
	newValue += this.box.value.substring(this.selEnd, this.box.value.length);
	this.box.value = newValue;
	this.box.setSelectionRange(caretPos, caretPos);
	this.box.focus();
}
SelObj.prototype.setSelText = setSelText;

function setSelSelectionRange(start, end){
	this.box.setSelectionRange(start, end);
}
SelObj.prototype.setSelSelectionRange = setSelSelectionRange;

//UNICODE CHARACTER FUNCTIONS
function IsCombiningDiacritic(CharNum){
	var Result = (((CharNum >= 0x0300)&&(CharNum <= 0x370))||((CharNum >= 0x20d0)&&(CharNum <= 0x20ff)));
	Result = Result || (((CharNum >= 0x3099)&&(CharNum <= 0x309a))||((CharNum >= 0xfe20)&&(CharNum <= 0xfe23)));
	return Result;
}

function IsCJK(CharNum){
	return ((CharNum >= 0x3000)&&(CharNum < 0xd800));
}

//SETUP FUNCTIONS
//BROWSER WILL REFILL TEXT BOXES FROM CACHE IF NOT PREVENTED
function ClearTextBoxes(){
	var NList = document.getElementsByTagName('input');
	for (var i=0; i<NList.length; i++){
		if ((NList[i].id.indexOf('Guess') > -1)||(NList[i].id.indexOf('Gap') > -1)){
			NList[i].value = '';
		}
		if (NList[i].id.indexOf('Chk') > -1){
			NList[i].checked = '';
		}
	}
}






//JCROSS CORE JAVASCRIPT CODE

var InGap = false;
var CurrentBox = null;
var Feedback = '';
var AcrossCaption = '';
var DownCaption = '';
var Correct = '';
var Incorrect = ''; 
var GiveHint = '';
var YourScoreIs = '&#x0392;&#x03B1;&#x03B8;&#x03BC;&#x03BF;&#x03BB;&#x03BF;&#x03B3;&#x03AF;&#x03B1;: ';
var BuiltGrid = '';
var BuiltExercise = '';
var Penalties = 0;
var Score = 0;
var InTextBox = false;
var Locked = false;
var TimeOver = false;
var CaseSensitive = false; 

var InputStuff = '<form method="post" action="" onsubmit="return false;"><span class="ClueNum">[strClueNum]: </span>';
InputStuff += '[strClue] <input autocomplete="off" onfocus="CurrentBox=this;InTextBox=true;" onblur="InTextBox=false;" id="[strBoxId]" type="edit" size="[strEditSize]" maxlength="[strMaxLength]"></input>';
InputStuff += '<button class="FuncButton" onclick="EnterGuess([strParams])">&#x0395;&#x03B9;&#x03C3;&#x03B1;&#x03B3;&#x03C9;&#x03B3;&#x03AE;</button>';
InputStuff += '<button class="FuncButton" onclick="ShowHint([strParams])">&#x0392;&#x03BF;&#x03AE;&#x03B8;&#x03B5;&#x03B9;&#x03B1;</button>';
InputStuff += '</form>';

var CurrBoxElement = null;
var Finished = false;

function StartUp(){
//Show a keypad if there is one	(added bugfix for 6.0.4.12)
	if (document.getElementById('CharacterKeypad') != null){
		document.getElementById('CharacterKeypad').style.display = 'block';
	}

	
	AcrossCaption = document.getElementById('CluesAcrossLabel').innerHTML;
	DownCaption = document.getElementById('CluesDownLabel').innerHTML;






}

function GetAnswerLength(Across,x,y){
	Result = 0;
	if (Across == false){
		while ((x<L.length)&&(L[x][y].length > 0)){
			Result += L[x][y].length;
			x++;
		} 
		return Result;
	}
	else{
		while ((y<L[x].length)&&(L[x][y].length > 0)){
			Result += L[x][y].length;
			y++;
		} 	
		return Result;
	}
}

function GetEditSize(Across,x,y){
	var Len = GetAnswerLength(Across,x,y);
	if (IsCJK(L[x][y].charCodeAt(0))){
		Len *= 2;
	}
	return Len;
}

function ShowClue(ClueNum,x,y){
	var Result = '';
	var Temp;
	var strParams;
	var Clue = document.getElementById('Clue_A_' + ClueNum);
	if (Clue != null){
		Temp = InputStuff.replace(/\[ClueNum\]/g, ClueNum);
		Temp = Temp.replace(/\[strClueNum\]/g, AcrossCaption + ' ' + ClueNum);
		strParams = 'true,' + ClueNum + ',' + x + ',' + y + ',\'[strBoxId]\'';
		Temp = Temp.replace(/\[strParams\]/g, strParams);
		Temp = Temp.replace(/\[strBoxId\]/g, 'GA_' + ClueNum + '_' + x + '_' + y);
		Temp = Temp.replace(/\[strEditSize\]/g, GetEditSize(true,x,y));
		Temp = Temp.replace(/\[strMaxLength\]/g, GetAnswerLength(true,x,y));
		Temp = Temp.replace(/\[strClue\]/g, Clue.innerHTML, Temp);
		Result += Temp;
	}
	Clue = document.getElementById('Clue_D_' + ClueNum);
	if (Clue != null){
		Temp = InputStuff.replace(/\[ClueNum\]/g, ClueNum);
		Temp = Temp.replace(/\[strClueNum\]/g, DownCaption + ' ' + ClueNum);
		strParams = 'false,' + ClueNum + ',' + x + ',' + y + ',\'[strBoxId]\'';
		Temp = Temp.replace(/\[strParams\]/g, strParams);
		Temp = Temp.replace(/\[strBoxId\]/g, 'GD_' + ClueNum + '_' + x + '_' + y);
		Temp = Temp.replace(/\[strEditSize\]/g, GetAnswerLength(false,x,y));
		Temp = Temp.replace(/\[strClue\]/g, Clue.innerHTML, Temp);
		Result += Temp;
	}
	document.getElementById('ClueEntry').innerHTML = Result;
}

function EnterGuess(Across,ClueNum,x,y,BoxId){
	if (document.getElementById(BoxId) != null){
		var Guess = document.getElementById(BoxId).value;
		var AnsLength = GetAnswerLength(Across,x,y);
		EnterAnswer(Guess,Across,AnsLength,x,y);
	}
}

function SplitStringToPerceivedChars(InString, PC){
	var Temp = InString.charAt(0);
	if (InString.length > 1){
		for (var i=1; i<InString.length; i++){
			if (IsCombiningDiacritic(InString.charCodeAt(i)) == true){
				Temp += InString.charAt(i);
			}
			else{
				PC.push(Temp);
				Temp = InString.charAt(i);
			}
		}
	}
	PC.push(Temp);
}

function EnterAnswer(Guess,Across,AnsLength,x,y){
	var PC = new Array();
	SplitStringToPerceivedChars(Guess, PC);
	
	var i=x;
	var j=y;
	var Letter = 0;
	while (Letter < AnsLength){
		if (Letter < PC.length){
			G[i][j] = PC[Letter];
			if (document.getElementById('L_' + i + '_' + j) != null){
				document.getElementById('L_' + i + '_' + j).innerHTML = PC[Letter];
			}
		}
		if (Across == true){
			j++;
		}
		else{
			i++;
		}
		Letter++;
	}
}

function SetGridSquareValue(x,y,Val){
	var GridId = 'L_' + x + '_' + y;
	if (document.getElementById(GridId) != null){
		document.getElementById(GridId).innerHTML = Val;
	}
}

function ShowHint(Across,ClueNum,x,y,BoxId){
	var i=x;
	var j=y;
	var LetterFromGuess = '';
	var LetterFromKey = '';
	var OutString = '';
	if (Across==true){
		while (j<L[i].length){
			if (L[i][j] != ''){
				OutString += L[i][j];
				if (CaseSensitive == true){
					LetterFromKey = L[i][j];
					LetterFromGuess = G[i][j];
				}
				else {
					LetterFromKey = L[i][j].toUpperCase();
					LetterFromGuess = G[i][j].toUpperCase();
				}
				if (LetterFromGuess != LetterFromKey){
//				if (G[i][j] != L[i][j]){
					G[i][j] = L[i][j];
					Penalties++;
					break;
				}
			}
			else{
				break;
			}
		j++;
		}
	}
	else{
		while (i<L.length){
			if (L[i][j] != ''){
				OutString += L[i][j];
				if (CaseSensitive == true){
					LetterFromKey = L[i][j];
					LetterFromGuess = G[i][j];
				}
				else {
					LetterFromKey = L[i][j].toUpperCase();
					LetterFromGuess = G[i][j].toUpperCase();
				}
				if (LetterFromGuess != LetterFromKey){
//				if (G[i][j] != L[i][j]){
					G[i][j] = L[i][j];
					Penalties++;
					break;
				}
			}
			else{
				break;
			}
		i++;
		}
	}
	if (document.getElementById(BoxId) != null){
		document.getElementById(BoxId).value = OutString;
	}
}

L = new Array();
L[0] = new Array('','','','','','','','','','','','','\u0414');
L[1] = new Array('','','','','','','','','','','','','\u041E');
L[2] = new Array('','\u041A','','','','','','','','\u041F','','','\u041A');
L[3] = new Array('\u041F','\u041E','\u041B','\u0418','\u0426','\u0415','\u0419','\u0421','\u041A','\u0418','\u0418','','\u0422');
L[4] = new Array('','\u0421','','','','','','','','\u041B','','','\u041E');
L[5] = new Array('','\u041C','','','','','','','\u041F','\u041E','\u0412','\u0410','\u0420');
L[6] = new Array('\u0412','\u041E','\u0414','\u0418','\u0422','\u0415','\u041B','\u042C','','\u0422','','','');
L[7] = new Array('','\u041D','','','','','','','','','','','');
L[8] = new Array('','\u0410','','','','','','','','','','','');
L[9] = new Array('','\u0424','','\u041F','','','','','','','','','');
L[10] = new Array('\u0421','\u0422','\u0420','\u041E','\u0418','\u0422','\u0415','\u041B','\u042C','','','','');
L[11] = new Array('','','','\u0416','','','','','','','','','');
L[12] = new Array('\u041C','\u0415','\u0425','\u0410','\u041D','\u0418','\u041A','','','','','','');
L[13] = new Array('','','','\u0420','','','','','','','','','');
L[14] = new Array('','','','\u041D','','','','','','','','','');
L[15] = new Array('','\u0423','\u0427','\u0418','\u0422','\u0415','\u041B','\u042C','','','','','');
L[16] = new Array('','','','\u041A','','','','','','','','','');


CL = new Array();
CL[0] = new Array(0,0,0,0,0,0,0,0,0,0,0,0,1);
CL[1] = new Array(0,0,0,0,0,0,0,0,0,0,0,0,0);
CL[2] = new Array(0,2,0,0,0,0,0,0,0,3,0,0,0);
CL[3] = new Array(4,0,0,0,0,0,0,0,0,0,0,0,0);
CL[4] = new Array(0,0,0,0,0,0,0,0,0,0,0,0,0);
CL[5] = new Array(0,0,0,0,0,0,0,0,5,0,0,0,0);
CL[6] = new Array(6,0,0,0,0,0,0,0,0,0,0,0,0);
CL[7] = new Array(0,0,0,0,0,0,0,0,0,0,0,0,0);
CL[8] = new Array(0,0,0,0,0,0,0,0,0,0,0,0,0);
CL[9] = new Array(0,0,0,7,0,0,0,0,0,0,0,0,0);
CL[10] = new Array(8,0,0,0,0,0,0,0,0,0,0,0,0);
CL[11] = new Array(0,0,0,0,0,0,0,0,0,0,0,0,0);
CL[12] = new Array(9,0,0,0,0,0,0,0,0,0,0,0,0);
CL[13] = new Array(0,0,0,0,0,0,0,0,0,0,0,0,0);
CL[14] = new Array(0,0,0,0,0,0,0,0,0,0,0,0,0);
CL[15] = new Array(0,10,0,0,0,0,0,0,0,0,0,0,0);
CL[16] = new Array(0,0,0,0,0,0,0,0,0,0,0,0,0);


G = new Array();
G[0] = new Array('','','','','','','','','','','','','');
G[1] = new Array('','','','','','','','','','','','','');
G[2] = new Array('','','','','','','','','','','','','');
G[3] = new Array('','','','','','','','','','','','','');
G[4] = new Array('','','','','','','','','','','','','');
G[5] = new Array('','','','','','','','','','','','','');
G[6] = new Array('','','','','','','','','','','','','');
G[7] = new Array('','','','','','','','','','','','','');
G[8] = new Array('','','','','','','','','','','','','');
G[9] = new Array('','','','','','','','','','','','','');
G[10] = new Array('','','','','','','','','','','','','');
G[11] = new Array('','','','','','','','','','','','','');
G[12] = new Array('','','','','','','','','','','','','');
G[13] = new Array('','','','','','','','','','','','','');
G[14] = new Array('','','','','','','','','','','','','');
G[15] = new Array('','','','','','','','','','','','','');
G[16] = new Array('','','','','','','','','','','','','');


function CheckAnswers(){
	if (Locked == true){return;}

	var AllCorrect = true;
	var TotLetters = 0;
	var CorrectLetters = 0;
	var LetterFromKey = ''; 
	var LetterFromGuess = '';
	
//Check each letter
	for (var i=0; i<L.length; i++){
		for (var j=0; j<L[i].length; j++){
			if (L[i][j] != ''){
				TotLetters++;
				if (CaseSensitive == true) {
					LetterFromKey = L[i][j];
					LetterFromGuess = G[i][j];
				}
				else {
					LetterFromKey = L[i][j].toUpperCase();
					LetterFromGuess = G[i][j].toUpperCase();
				}
				if (LetterFromGuess != LetterFromKey){ 
					G[i][j] = '';
//Blank that square in the grid
					SetGridSquareValue(i,j,'');
					AllCorrect = false;
				}
				else{
					CorrectLetters++;
				}
			}
		}
	}

	Score = Math.floor(((CorrectLetters-Penalties) * 100)/TotLetters);
	if (Score < 0){Score = 0;}

//Compile the output
	var Output = '';

	if (AllCorrect == true){
		Output = Correct + '<br />';
	}

	Output += YourScoreIs + ' ' + Score + '%.<br />';
	if (AllCorrect == false){
		Output += Incorrect;
		Penalties++;
	}

	ShowMessage(Output);
	WriteToInstructions(Output);
	
	if ((AllCorrect == true)||(TimeOver == true)){


		TimeOver = true;
		Locked = true;
		Finished = true;
	}

}

function TypeChars(Chars){
	if (CurrentBox != null){
		CurrentBox.value += Chars;
	}
}








//-->

//]]>

</script>


</head>

<body onload="StartUp()" id="TheBody" >

<!-- BeginTopNavButtons -->


<div class="NavButtonBar" id="TopNavBar">


<button class="NavButton" onclick="history.back(); return false;">&lt;=</button>



<button class="NavButton" onclick="location=''; return false;"> &#x03A0;&#x03B5;&#x03C1;&#x03B9;&#x03B5;&#x03C7;&#x03CC;&#x03BC;&#x03B5;&#x03BD;&#x03B1; </button>



<button class="NavButton" onclick="location=''; return false;">=&gt;</button>


</div>



<!-- EndTopNavButtons -->

<div class="Titles">
	<h2 class="ExerciseTitle">&#x041F;&#x0420;&#x041E;&#x0424;&#x0415;&#x0421;&#x0421;&#x0418;&#x0418;</h2>

	<h3 class="ExerciseSubtitle">&#x03A3;&#x03C4;&#x03B1;&#x03C5;&#x03C1;&#x03CC;&#x03BB;&#x03B5;&#x03BE;&#x03BF;</h3>



</div>

<div id="InstructionsDiv" class="StdDiv">
	<div id="Instructions">&#x039A;&#x03AC;&#x03BD;&#x03B5; &#x03BA;&#x03BB;&#x03B9;&#x03BA; &#x03C3;&#x03B5; &#x03AD;&#x03BD;&#x03B1;&#x03BD; &#x03B1;&#x03C1;&#x03B9;&#x03B8;&#x03BC;&#x03CC; &#x03C3;&#x03C4;&#x03BF; &#x03C3;&#x03C4;&#x03B1;&#x03C5;&#x03C1;&#x03CC;&#x03BB;&#x03B5;&#x03BE;&#x03BF;. &#x03A3;&#x03C4;&#x03BF; &#x03C0;&#x03BB;&#x03B1;&#x03AF;&#x03C3;&#x03B9;&#x03BF; &#x03C0;&#x03BF;&#x03C5; &#x03B8;&#x03B1; &#x03B5;&#x03BC;&#x03C6;&#x03B1;&#x03BD;&#x03B9;&#x03C3;&#x03C4;&#x03B5;&#x03AF; &#x03B3;&#x03C1;&#x03AC;&#x03C8;&#x03B5; &#x03C4;&#x03B7;&#x03BD; &#x03B1;&#x03C0;&#x03AC;&#x03BD;&#x03C4;&#x03B7;&#x03C3;&#x03B7; &#x03BA;&#x03B9; &#x03AD;&#x03C0;&#x03B5;&#x03B9;&#x03C4;&#x03B1; &#x03C0;&#x03AC;&#x03C4;&#x03B1; "&#x0395;&#x03B9;&#x03C3;&#x03B1;&#x03B3;&#x03C9;&#x03B3;&#x03AE;". &#x039C;&#x03CC;&#x03BB;&#x03B9;&#x03C2; &#x03C4;&#x03B5;&#x03BB;&#x03B5;&#x03B9;&#x03CE;&#x03C3;&#x03B5;&#x03B9;&#x03C2; &#x03C0;&#x03AC;&#x03C4;&#x03B1; "&#x0388;&#x03BB;&#x03B5;&#x03B3;&#x03C7;&#x03BF;&#x03C2;".</div>
</div>

<div id="ContainerDiv">



<div class="ExerciseContainer">



<div class="Keypad" id="CharacterKeypad" style="float: left;">
<button onclick="TypeChars('\u0410'); return false;">&#x0410;</button> <button onclick="TypeChars('\u0412'); return false;">&#x0412;</button> <button onclick="TypeChars('\u0414'); return false;">&#x0414;</button> <button onclick="TypeChars('\u0415'); return false;">&#x0415;</button> <button onclick="TypeChars('\u0416'); return false;">&#x0416;</button> <button onclick="TypeChars('\u0418'); return false;">&#x0418;</button> <button onclick="TypeChars('\u0419'); return false;">&#x0419;</button> <button onclick="TypeChars('\u041A'); return false;">&#x041A;</button> <button onclick="TypeChars('\u041B'); return false;">&#x041B;</button> <button onclick="TypeChars('\u041C'); return false;">&#x041C;</button> <button onclick="TypeChars('\u041D'); return false;">&#x041D;</button> <button onclick="TypeChars('\u041E'); return false;">&#x041E;</button> <button onclick="TypeChars('\u041F'); return false;">&#x041F;</button> <button onclick="TypeChars('\u0420'); return false;">&#x0420;</button> <button onclick="TypeChars('\u0421'); return false;">&#x0421;</button> <button onclick="TypeChars('\u0422'); return false;">&#x0422;</button> <button onclick="TypeChars('\u0423'); return false;">&#x0423;</button> <button onclick="TypeChars('\u0424'); return false;">&#x0424;</button> <button onclick="TypeChars('\u0425'); return false;">&#x0425;</button> <button onclick="TypeChars('\u0426'); return false;">&#x0426;</button> <button onclick="TypeChars('\u0427'); return false;">&#x0427;</button> <button onclick="TypeChars('\u042C'); return false;">&#x042C;</button> 
</div>


<div id="ClueEntry">

</div>

<!-- This top button is hidden; uncomment it to reveal it. -->
<!--
<button id="CheckButton1" class="FuncButton" onclick="CheckAnswers()">&#160;&#x0388;&#x03BB;&#x03B5;&#x03B3;&#x03C7;&#x03BF;&#x03C2;&#160;</button>

 -->
 
<table class="CrosswordGrid">
<tbody>

<tr id="Row_0"><td class="BlankCell">&#160;</td><td class="BlankCell">&#160;</td><td class="BlankCell">&#160;</td><td class="BlankCell">&#160;</td><td class="BlankCell">&#160;</td><td class="BlankCell">&#160;</td><td class="BlankCell">&#160;</td><td class="BlankCell">&#160;</td><td class="BlankCell">&#160;</td><td class="BlankCell">&#160;</td><td class="BlankCell">&#160;</td><td class="BlankCell">&#160;</td><td class="NumLetterCell"><a href="javascript:void(0);" class="GridNum" onclick="ShowClue(1,0,12)">1</a><span class="NumLetterCellText" id="L_0_12" onclick="ShowClue(1,0,12)">&#160;&#160;&#160;</span></td></tr><tr id="Row_1"><td class="BlankCell">&#160;</td><td class="BlankCell">&#160;</td><td class="BlankCell">&#160;</td><td class="BlankCell">&#160;</td><td class="BlankCell">&#160;</td><td class="BlankCell">&#160;</td><td class="BlankCell">&#160;</td><td class="BlankCell">&#160;</td><td class="BlankCell">&#160;</td><td class="BlankCell">&#160;</td><td class="BlankCell">&#160;</td><td class="BlankCell">&#160;</td><td class="LetterOnlyCell"><span id="L_1_12">&#160;</span></td></tr><tr id="Row_2"><td class="BlankCell">&#160;</td><td class="NumLetterCell"><a href="javascript:void(0);" class="GridNum" onclick="ShowClue(2,2,1)">2</a><span class="NumLetterCellText" id="L_2_1" onclick="ShowClue(2,2,1)">&#160;&#160;&#160;</span></td><td class="BlankCell">&#160;</td><td class="BlankCell">&#160;</td><td class="BlankCell">&#160;</td><td class="BlankCell">&#160;</td><td class="BlankCell">&#160;</td><td class="BlankCell">&#160;</td><td class="BlankCell">&#160;</td><td class="NumLetterCell"><a href="javascript:void(0);" class="GridNum" onclick="ShowClue(3,2,9)">3</a><span class="NumLetterCellText" id="L_2_9" onclick="ShowClue(3,2,9)">&#160;&#160;&#160;</span></td><td class="BlankCell">&#160;</td><td class="BlankCell">&#160;</td><td class="LetterOnlyCell"><span id="L_2_12">&#160;</span></td></tr><tr id="Row_3"><td class="NumLetterCell"><a href="javascript:void(0);" class="GridNum" onclick="ShowClue(4,3,0)">4</a><span class="NumLetterCellText" id="L_3_0" onclick="ShowClue(4,3,0)">&#160;&#160;&#160;</span></td><td class="LetterOnlyCell"><span id="L_3_1">&#160;</span></td><td class="LetterOnlyCell"><span id="L_3_2">&#160;</span></td><td class="LetterOnlyCell"><span id="L_3_3">&#160;</span></td><td class="LetterOnlyCell"><span id="L_3_4">&#160;</span></td><td class="LetterOnlyCell"><span id="L_3_5">&#160;</span></td><td class="LetterOnlyCell"><span id="L_3_6">&#160;</span></td><td class="LetterOnlyCell"><span id="L_3_7">&#160;</span></td><td class="LetterOnlyCell"><span id="L_3_8">&#160;</span></td><td class="LetterOnlyCell"><span id="L_3_9">&#160;</span></td><td class="LetterOnlyCell"><span id="L_3_10">&#160;</span></td><td class="BlankCell">&#160;</td><td class="LetterOnlyCell"><span id="L_3_12">&#160;</span></td></tr><tr id="Row_4"><td class="BlankCell">&#160;</td><td class="LetterOnlyCell"><span id="L_4_1">&#160;</span></td><td class="BlankCell">&#160;</td><td class="BlankCell">&#160;</td><td class="BlankCell">&#160;</td><td class="BlankCell">&#160;</td><td class="BlankCell">&#160;</td><td class="BlankCell">&#160;</td><td class="BlankCell">&#160;</td><td class="LetterOnlyCell"><span id="L_4_9">&#160;</span></td><td class="BlankCell">&#160;</td><td class="BlankCell">&#160;</td><td class="LetterOnlyCell"><span id="L_4_12">&#160;</span></td></tr><tr id="Row_5"><td class="BlankCell">&#160;</td><td class="LetterOnlyCell"><span id="L_5_1">&#160;</span></td><td class="BlankCell">&#160;</td><td class="BlankCell">&#160;</td><td class="BlankCell">&#160;</td><td class="BlankCell">&#160;</td><td class="BlankCell">&#160;</td><td class="BlankCell">&#160;</td><td class="NumLetterCell"><a href="javascript:void(0);" class="GridNum" onclick="ShowClue(5,5,8)">5</a><span class="NumLetterCellText" id="L_5_8" onclick="ShowClue(5,5,8)">&#160;&#160;&#160;</span></td><td class="LetterOnlyCell"><span id="L_5_9">&#160;</span></td><td class="LetterOnlyCell"><span id="L_5_10">&#160;</span></td><td class="LetterOnlyCell"><span id="L_5_11">&#160;</span></td><td class="LetterOnlyCell"><span id="L_5_12">&#160;</span></td></tr><tr id="Row_6"><td class="NumLetterCell"><a href="javascript:void(0);" class="GridNum" onclick="ShowClue(6,6,0)">6</a><span class="NumLetterCellText" id="L_6_0" onclick="ShowClue(6,6,0)">&#160;&#160;&#160;</span></td><td class="LetterOnlyCell"><span id="L_6_1">&#160;</span></td><td class="LetterOnlyCell"><span id="L_6_2">&#160;</span></td><td class="LetterOnlyCell"><span id="L_6_3">&#160;</span></td><td class="LetterOnlyCell"><span id="L_6_4">&#160;</span></td><td class="LetterOnlyCell"><span id="L_6_5">&#160;</span></td><td class="LetterOnlyCell"><span id="L_6_6">&#160;</span></td><td class="LetterOnlyCell"><span id="L_6_7">&#160;</span></td><td class="BlankCell">&#160;</td><td class="LetterOnlyCell"><span id="L_6_9">&#160;</span></td><td class="BlankCell">&#160;</td><td class="BlankCell">&#160;</td><td class="BlankCell">&#160;</td></tr><tr id="Row_7"><td class="BlankCell">&#160;</td><td class="LetterOnlyCell"><span id="L_7_1">&#160;</span></td><td class="BlankCell">&#160;</td><td class="BlankCell">&#160;</td><td class="BlankCell">&#160;</td><td class="BlankCell">&#160;</td><td class="BlankCell">&#160;</td><td class="BlankCell">&#160;</td><td class="BlankCell">&#160;</td><td class="BlankCell">&#160;</td><td class="BlankCell">&#160;</td><td class="BlankCell">&#160;</td><td class="BlankCell">&#160;</td></tr><tr id="Row_8"><td class="BlankCell">&#160;</td><td class="LetterOnlyCell"><span id="L_8_1">&#160;</span></td><td class="BlankCell">&#160;</td><td class="BlankCell">&#160;</td><td class="BlankCell">&#160;</td><td class="BlankCell">&#160;</td><td class="BlankCell">&#160;</td><td class="BlankCell">&#160;</td><td class="BlankCell">&#160;</td><td class="BlankCell">&#160;</td><td class="BlankCell">&#160;</td><td class="BlankCell">&#160;</td><td class="BlankCell">&#160;</td></tr><tr id="Row_9"><td class="BlankCell">&#160;</td><td class="LetterOnlyCell"><span id="L_9_1">&#160;</span></td><td class="BlankCell">&#160;</td><td class="NumLetterCell"><a href="javascript:void(0);" class="GridNum" onclick="ShowClue(7,9,3)">7</a><span class="NumLetterCellText" id="L_9_3" onclick="ShowClue(7,9,3)">&#160;&#160;&#160;</span></td><td class="BlankCell">&#160;</td><td class="BlankCell">&#160;</td><td class="BlankCell">&#160;</td><td class="BlankCell">&#160;</td><td class="BlankCell">&#160;</td><td class="BlankCell">&#160;</td><td class="BlankCell">&#160;</td><td class="BlankCell">&#160;</td><td class="BlankCell">&#160;</td></tr><tr id="Row_10"><td class="NumLetterCell"><a href="javascript:void(0);" class="GridNum" onclick="ShowClue(8,10,0)">8</a><span class="NumLetterCellText" id="L_10_0" onclick="ShowClue(8,10,0)">&#160;&#160;&#160;</span></td><td class="LetterOnlyCell"><span id="L_10_1">&#160;</span></td><td class="LetterOnlyCell"><span id="L_10_2">&#160;</span></td><td class="LetterOnlyCell"><span id="L_10_3">&#160;</span></td><td class="LetterOnlyCell"><span id="L_10_4">&#160;</span></td><td class="LetterOnlyCell"><span id="L_10_5">&#160;</span></td><td class="LetterOnlyCell"><span id="L_10_6">&#160;</span></td><td class="LetterOnlyCell"><span id="L_10_7">&#160;</span></td><td class="LetterOnlyCell"><span id="L_10_8">&#160;</span></td><td class="BlankCell">&#160;</td><td class="BlankCell">&#160;</td><td class="BlankCell">&#160;</td><td class="BlankCell">&#160;</td></tr><tr id="Row_11"><td class="BlankCell">&#160;</td><td class="BlankCell">&#160;</td><td class="BlankCell">&#160;</td><td class="LetterOnlyCell"><span id="L_11_3">&#160;</span></td><td class="BlankCell">&#160;</td><td class="BlankCell">&#160;</td><td class="BlankCell">&#160;</td><td class="BlankCell">&#160;</td><td class="BlankCell">&#160;</td><td class="BlankCell">&#160;</td><td class="BlankCell">&#160;</td><td class="BlankCell">&#160;</td><td class="BlankCell">&#160;</td></tr><tr id="Row_12"><td class="NumLetterCell"><a href="javascript:void(0);" class="GridNum" onclick="ShowClue(9,12,0)">9</a><span class="NumLetterCellText" id="L_12_0" onclick="ShowClue(9,12,0)">&#160;&#160;&#160;</span></td><td class="LetterOnlyCell"><span id="L_12_1">&#160;</span></td><td class="LetterOnlyCell"><span id="L_12_2">&#160;</span></td><td class="LetterOnlyCell"><span id="L_12_3">&#160;</span></td><td class="LetterOnlyCell"><span id="L_12_4">&#160;</span></td><td class="LetterOnlyCell"><span id="L_12_5">&#160;</span></td><td class="LetterOnlyCell"><span id="L_12_6">&#160;</span></td><td class="BlankCell">&#160;</td><td class="BlankCell">&#160;</td><td class="BlankCell">&#160;</td><td class="BlankCell">&#160;</td><td class="BlankCell">&#160;</td><td class="BlankCell">&#160;</td></tr><tr id="Row_13"><td class="BlankCell">&#160;</td><td class="BlankCell">&#160;</td><td class="BlankCell">&#160;</td><td class="LetterOnlyCell"><span id="L_13_3">&#160;</span></td><td class="BlankCell">&#160;</td><td class="BlankCell">&#160;</td><td class="BlankCell">&#160;</td><td class="BlankCell">&#160;</td><td class="BlankCell">&#160;</td><td class="BlankCell">&#160;</td><td class="BlankCell">&#160;</td><td class="BlankCell">&#160;</td><td class="BlankCell">&#160;</td></tr><tr id="Row_14"><td class="BlankCell">&#160;</td><td class="BlankCell">&#160;</td><td class="BlankCell">&#160;</td><td class="LetterOnlyCell"><span id="L_14_3">&#160;</span></td><td class="BlankCell">&#160;</td><td class="BlankCell">&#160;</td><td class="BlankCell">&#160;</td><td class="BlankCell">&#160;</td><td class="BlankCell">&#160;</td><td class="BlankCell">&#160;</td><td class="BlankCell">&#160;</td><td class="BlankCell">&#160;</td><td class="BlankCell">&#160;</td></tr><tr id="Row_15"><td class="BlankCell">&#160;</td><td class="NumLetterCell"><a href="javascript:void(0);" class="GridNum" onclick="ShowClue(10,15,1)">10</a><span class="NumLetterCellText" id="L_15_1" onclick="ShowClue(10,15,1)">&#160;&#160;&#160;</span></td><td class="LetterOnlyCell"><span id="L_15_2">&#160;</span></td><td class="LetterOnlyCell"><span id="L_15_3">&#160;</span></td><td class="LetterOnlyCell"><span id="L_15_4">&#160;</span></td><td class="LetterOnlyCell"><span id="L_15_5">&#160;</span></td><td class="LetterOnlyCell"><span id="L_15_6">&#160;</span></td><td class="LetterOnlyCell"><span id="L_15_7">&#160;</span></td><td class="BlankCell">&#160;</td><td class="BlankCell">&#160;</td><td class="BlankCell">&#160;</td><td class="BlankCell">&#160;</td><td class="BlankCell">&#160;</td></tr><tr id="Row_16"><td class="BlankCell">&#160;</td><td class="BlankCell">&#160;</td><td class="BlankCell">&#160;</td><td class="LetterOnlyCell"><span id="L_16_3">&#160;</span></td><td class="BlankCell">&#160;</td><td class="BlankCell">&#160;</td><td class="BlankCell">&#160;</td><td class="BlankCell">&#160;</td><td class="BlankCell">&#160;</td><td class="BlankCell">&#160;</td><td class="BlankCell">&#160;</td><td class="BlankCell">&#160;</td><td class="BlankCell">&#160;</td></tr>

</tbody>
</table>

<button id="CheckButton2" class="FuncButton" onclick="CheckAnswers()">&#160;&#x0388;&#x03BB;&#x03B5;&#x03B3;&#x03C7;&#x03BF;&#x03C2;&#160;</button>

<table id="Clues">
<tbody>
<tr>
<td>

<table class="ClueList">
<tbody id="CluesAcross">
<tr><td colspan="2"><h3 class="ExerciseSubtitle" id="CluesAcrossLabel"></h3></td></tr>

<tr><td class="ClueNum">4. </td><td id="Clue_A_4" class="Clue">&#x0443; &#x043D;&#x0435;&#x0433;&#x043E; &#x0435;&#x0441;&#x0442;&#x044C; &#x043F;&#x0438;&#x0441;&#x0442;&#x043E;&#x043B;&#x0435;&#x0442;</td></tr><tr><td class="ClueNum">5. </td><td id="Clue_A_5" class="Clue">&#x043E;&#x043D; &#x043F;&#x0440;&#x0438;&#x0433;&#x043E;&#x0442;&#x043E;&#x0432;&#x0438;&#x0442; &#x0435;&#x0434;&#x0443;</td></tr><tr><td class="ClueNum">6. </td><td id="Clue_A_6" class="Clue">&#x043E;&#x043D; &#x0432;&#x043E;&#x0434;&#x0438;&#x0442; &#x043C;&#x0430;&#x0448;&#x0438;&#x043D;&#x0443;</td></tr><tr><td class="ClueNum">8. </td><td id="Clue_A_8" class="Clue">&#x043E;&#x043D; &#x0441;&#x0442;&#x0440;&#x043E;&#x0438;&#x0442; &#x0434;&#x043E;&#x043C;&#x0430;</td></tr><tr><td class="ClueNum">9. </td><td id="Clue_A_9" class="Clue">&#x043E;&#x043D; &#x0440;&#x0435;&#x043C;&#x043E;&#x043D;&#x0442;&#x0438;&#x0440;&#x0443;&#x0435;&#x0442; &#x043C;&#x0430;&#x0448;&#x0438;&#x043D;&#x044B;</td></tr><tr><td class="ClueNum">10. </td><td id="Clue_A_10" class="Clue">&#x043E;&#x043D; &#x0434;&#x0430;&#x0435;&#x0442; &#x0443;&#x0440;&#x043E;&#x043A;&#x0438;</td></tr>

</tbody>
</table>

</td>

<td>

<table class="ClueList">
<tbody id="CluesDown">
<tr><td colspan="2"><h3 class="ExerciseSubtitle" id="CluesDownLabel"></h3></td></tr>

<tr><td class="ClueNum">1. </td><td id="Clue_D_1" class="Clue">&#x043E;&#x043D; &#x043B;&#x0435;&#x0447;&#x0438;&#x0442; &#x0431;&#x043E;&#x043B;&#x044C;&#x043D;&#x044B;&#x0445;</td></tr><tr><td class="ClueNum">2. </td><td id="Clue_D_2" class="Clue">&#x043E;&#x043D; &#x043F;&#x0443;&#x0442;&#x0435;&#x0448;&#x0435;&#x0441;&#x0442;&#x0432;&#x0443;&#x0435;&#x0442; &#x0432; &#x043A;&#x043E;&#x0441;&#x043C;&#x043E;&#x0441;&#x0435;</td></tr><tr><td class="ClueNum">3. </td><td id="Clue_D_3" class="Clue">&#x043E;&#x043D; &#x043B;&#x0435;&#x0442;&#x0430;&#x0435;&#x0442; &#x0432; &#x043E;&#x0431;&#x043B;&#x0430;&#x043A;&#x0430;&#x0445;</td></tr><tr><td class="ClueNum">7. </td><td id="Clue_D_7" class="Clue">&#x043E;&#x043D; &#x0442;&#x0443;&#x0448;&#x0438;&#x0442; &#x043E;&#x0433;&#x043E;&#x043D;&#x044C;</td></tr>

</tbody>
</table>

</td>
</tr>
</tbody>
</table>

</div>

</div>

<div class="Feedback" id="FeedbackDiv">
<div class="FeedbackText" id="FeedbackContent"></div>
<button id="FeedbackOKButton" class="FuncButton" onclick="HideFeedback(); return false;">&#160;OK&#160;</button>
</div>

<!-- BeginBottomNavButtons -->


<div class="NavButtonBar" id="BottomNavBar">


<button class="NavButton" onclick="history.back(); return false;">&lt;=</button>



<button class="NavButton" onclick="location=''; return false;"> &#x03A0;&#x03B5;&#x03C1;&#x03B9;&#x03B5;&#x03C7;&#x03CC;&#x03BC;&#x03B5;&#x03BD;&#x03B1; </button>



<button class="NavButton" onclick="location=''; return false;">=&gt;</button>


</div>



<!-- EndBottomNavButtons -->

<!-- BeginSubmissionForm -->

<!-- EndSubmissionForm -->

</body>

</html>
